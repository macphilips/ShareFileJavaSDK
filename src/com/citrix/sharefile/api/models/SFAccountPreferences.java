// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2017 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

package com.citrix.sharefile.api.models;

import com.citrix.sharefile.api.enumerations.SFSafeEnum;
import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.Date;

public class SFAccountPreferences extends SFODataObject {

    @SerializedName("EnableViewOnly")
    private Boolean EnableViewOnly;
    @SerializedName("EnableWatermarkOnViewOnly")
    private Boolean EnableWatermarkOnViewOnly;
    @SerializedName("AllowProactiveNotifications")
    private Boolean AllowProactiveNotifications;
    @SerializedName("ShowUserListToClients")
    private Boolean ShowUserListToClients;
    @SerializedName("RequireLoginOnDownload")
    private Boolean RequireLoginOnDownload;
    @SerializedName("RequireLoginOnUpload")
    private Boolean RequireLoginOnUpload;
    @SerializedName("RequireLoginByDefault")
    private Boolean RequireLoginByDefault;
    @SerializedName("EnableClientSend")
    private Boolean EnableClientSend;
    @SerializedName("EnableThumbnails")
    private Boolean EnableThumbnails;
    @SerializedName("EnableSSO")
    private Boolean EnableSSO;
    @SerializedName("VirusStrictness")
    private Integer VirusStrictness;
    @SerializedName("EnableSfAdi")
    private Boolean EnableSfAdi;
    @SerializedName("EnableMultipleZones")
    private Boolean EnableMultipleZones;
    @SerializedName("DefaultZone")
    private SFZone DefaultZone;
    @SerializedName("EnableVersioning")
    private Boolean EnableVersioning;
    @SerializedName("SystemType")
    private String SystemType;
    @SerializedName("EnableSync")
    private Boolean EnableSync;
    @SerializedName("EnableSyncAutoUpdate")
    private Boolean EnableSyncAutoUpdate;
    @SerializedName("SystemName")
    private String SystemName;
    @SerializedName("HomeScreenName")
    private String HomeScreenName;
    @SerializedName("ShowTermsCheckbox")
    private Boolean ShowTermsCheckbox;
    @SerializedName("TermsCheckboxText")
    private String TermsCheckboxText;
    @SerializedName("TermsCheckboxStrictness")
    private Integer TermsCheckboxStrictness;
    @SerializedName("RequireCompanyNameWithUserInfo")
    private Boolean RequireCompanyNameWithUserInfo;
    @SerializedName("EnableEditor")
    private Boolean EnableEditor;
    @SerializedName("ShareIDMaxExpirationDays")
    private Integer ShareIDMaxExpirationDays;
    @SerializedName("AdminIsSuperUser")
    private Boolean AdminIsSuperUser;
    @SerializedName("ShowFolderAccessList")
    private Boolean ShowFolderAccessList;
    @SerializedName("FromEmailIsShareFile")
    private Boolean FromEmailIsShareFile;
    @SerializedName("UseAlternateSMTP")
    private Boolean UseAlternateSMTP;
    @SerializedName("ShowPasswordInEmail")
    private Boolean ShowPasswordInEmail;
    @SerializedName("EmailPasswordText")
    private String EmailPasswordText;
    @SerializedName("EnableSelfNotificationsUpload")
    private Boolean EnableSelfNotificationsUpload;
    @SerializedName("EnableSelfNotificationsDownload")
    private Boolean EnableSelfNotificationsDownload;
    @SerializedName("EnableUploadShareIDReceipt")
    private Boolean EnableUploadShareIDReceipt;
    @SerializedName("DefaultConsolidatedNotificationInterval")
    private Integer DefaultConsolidatedNotificationInterval;
    @SerializedName("ExpirationDays")
    private Integer ExpirationDays;
    @SerializedName("DefaultSortField")
    private String DefaultSortField;
    @SerializedName("DefaultSortOrder")
    private String DefaultSortOrder;
    @SerializedName("DefaultIsVersioned")
    private Boolean DefaultIsVersioned;
    @SerializedName("DefaultMaxVersions")
    private Integer DefaultMaxVersions;
    @SerializedName("ViewOnlyWatermarkText")
    private String ViewOnlyWatermarkText;
    @SerializedName("EnableDocViewerPrinting")
    private Boolean EnableDocViewerPrinting;
    @SerializedName("EnableWatermarkedDownloads")
    private Boolean EnableWatermarkedDownloads;
    @SerializedName("EnableTwoFactorAuth")
    private Boolean EnableTwoFactorAuth;
    @SerializedName("LoginFailMaxAttempts")
    private Integer LoginFailMaxAttempts;
    @SerializedName("LoginFailLockoutSecs")
    private Integer LoginFailLockoutSecs;
    @SerializedName("IPRestrictions")
    private String IPRestrictions;
    @SerializedName("InactiveTimeoutMins")
    private Integer InactiveTimeoutMins;
    @SerializedName("OAuth2RefreshTokenLifetimeMinutes")
    private Integer OAuth2RefreshTokenLifetimeMinutes;
    @SerializedName("PasswordRegEx")
    private String PasswordRegEx;
    @SerializedName("PasswordRegExFormula")
    private String PasswordRegExFormula;
    @SerializedName("PasswordRegExDescription")
    private String PasswordRegExDescription;
    @SerializedName("EnableActivationLinks")
    private Boolean EnableActivationLinks;
    @SerializedName("IsFINRA")
    private Boolean IsFINRA;
    @SerializedName("EnableOAuth")
    private Boolean EnableOAuth;
    @SerializedName("EnableQandA")
    private Boolean EnableQandA;
    @SerializedName("EnableQandATextInNotifications")
    private Boolean EnableQandATextInNotifications;
    @SerializedName("UXMode")
    private SFSafeEnum<SFUXMode> UXMode;
    @SerializedName("IndustryCode")
    private Integer IndustryCode;
    @SerializedName("PasswordMaxAgeDays")
    private Integer PasswordMaxAgeDays;
    @SerializedName("PasswordHistoryCount")
    private Integer PasswordHistoryCount;
    @SerializedName("MinimumLength")
    private Integer MinimumLength;
    @SerializedName("MinimumSpecialCharacters")
    private Integer MinimumSpecialCharacters;
    @SerializedName("MinimumNumeric")
    private Integer MinimumNumeric;
    @SerializedName("AllowedSpecialCharacters")
    private String AllowedSpecialCharacters;
    @SerializedName("PasswordPolicy")
    private SFPasswordPolicy PasswordPolicy;
    @SerializedName("EnableWebDAV")
    private Boolean EnableWebDAV;
    @SerializedName("WebDAVServerName")
    private String WebDAVServerName;
    @SerializedName("EnableFTP")
    private Boolean EnableFTP;
    @SerializedName("EnableSFTP")
    private Boolean EnableSFTP;
    @SerializedName("FtpServerName")
    private String FtpServerName;
    @SerializedName("DisableMarketing")
    private Boolean DisableMarketing;
    @SerializedName("VDRDocViewerURL")
    private String VDRDocViewerURL;
    @SerializedName("EnableSMBConnectorForAccount")
    private Boolean EnableSMBConnectorForAccount;
    @SerializedName("EnablePersonalCloudConnectors")
    private Boolean EnablePersonalCloudConnectors;
    @SerializedName("AccountID")
    private String AccountID;
    @SerializedName("EnableStorageZoneConnector")
    private Boolean EnableStorageZoneConnector;
    @SerializedName("HasAnyConnectorZones")
    private Boolean HasAnyConnectorZones;
    @SerializedName("EnableENSForAccount")
    private Boolean EnableENSForAccount;
    @SerializedName("ENSRecommendedPollingSyncInterval")
    private String ENSRecommendedPollingSyncInterval;
    @SerializedName("ENSRecommendedNotificationSyncInterval")
    private String ENSRecommendedNotificationSyncInterval;
    @SerializedName("ENSNotificationConfigurationCount")
    private Integer ENSNotificationConfigurationCount;
    @SerializedName("ENSFailSafePollingCount")
    private Integer ENSFailSafePollingCount;
    @SerializedName("ENSMaxNotificationSyncWaitCount")
    private Integer ENSMaxNotificationSyncWaitCount;
    @SerializedName("TrustedDomains")
    private String TrustedDomains;
    @SerializedName("UseWebPopAsWebAppLogin")
    private Boolean UseWebPopAsWebAppLogin;
    @SerializedName("EnableReportingV3")
    private Boolean EnableReportingV3;
    @SerializedName("EnableEncryptedEmailForOutlookPlugin")
    private Boolean EnableEncryptedEmailForOutlookPlugin;
    @SerializedName("EnableDocPreviews")
    private Boolean EnableDocPreviews;
    @SerializedName("DisablePasswordAutocompleteInWebApp")
    private Boolean DisablePasswordAutocompleteInWebApp;
    @SerializedName("EnableDesktopEditorForAccount")
    private Boolean EnableDesktopEditorForAccount;
    @SerializedName("UseStrictEmployeeDefinition")
    private Boolean UseStrictEmployeeDefinition;
    @SerializedName("EmployeeEmailDomains")
    private String EmployeeEmailDomains;
    @SerializedName("IsPremier")
    private Boolean IsPremier;
    @SerializedName("DisableShareConnectForAccount")
    private Boolean DisableShareConnectForAccount;
    @SerializedName("DisablePrintToShareFile")
    private Boolean DisablePrintToShareFile;
    @SerializedName("EnableWebAppConnectorBrowsing")
    private Boolean EnableWebAppConnectorBrowsing;
    @SerializedName("EnableStrictCrossdomainPolicy")
    private Boolean EnableStrictCrossdomainPolicy;
    @SerializedName("DisableScanSnap")
    private Boolean DisableScanSnap;
    @SerializedName("EnableFileCount")
    private Boolean EnableFileCount;
    @SerializedName("EnableAntiVirus")
    private Boolean EnableAntiVirus;
    @SerializedName("EnableFileLocking")
    private Boolean EnableFileLocking;
    @SerializedName("DisableWebAppAccess")
    private Boolean DisableWebAppAccess;
    @SerializedName("EnableCWC")
    private Boolean EnableCWC;
    @SerializedName("EnableEnterpriseArchive")
    private Boolean EnableEnterpriseArchive;
    @SerializedName("EnterpriseArchiveActivationDate")
    private Date EnterpriseArchiveActivationDate;
    @SerializedName("EnableIntegrations")
    private Boolean EnableIntegrations;
    @SerializedName("IntegrationProviders")
    private ArrayList<SFSafeEnum<SFIntegrationProvider>> IntegrationProviders;
    @SerializedName("EnableBouncedEmailNotifications")
    private Boolean EnableBouncedEmailNotifications;
    @SerializedName("ShowDownloadLinkInUploadNotification")
    private Boolean ShowDownloadLinkInUploadNotification;
    @SerializedName("AllowDownloadNotificationsWithoutAdmin")
    private Boolean AllowDownloadNotificationsWithoutAdmin;
    @SerializedName("EnableUserInvitations")
    private Boolean EnableUserInvitations;
    @SerializedName("EnableClickTrails")
    private Boolean EnableClickTrails;
    @SerializedName("EnableFolderTemplates")
    private Boolean EnableFolderTemplates;
    @SerializedName("EnableFileDrops")
    private Boolean EnableFileDrops;
    @SerializedName("SpamEmailThreshold")
    private Integer SpamEmailThreshold;
    @SerializedName("EnableExternalEmailArchiving")
    private Boolean EnableExternalEmailArchiving;
    @SerializedName("CreatorCanDelete")
    private Boolean CreatorCanDelete;
    @SerializedName("CanStoreItemsInShareFile")
    private Boolean CanStoreItemsInShareFile;
    @SerializedName("EnableHomeFolders")
    private Boolean EnableHomeFolders;
    @SerializedName("EnableCustomBrandingUsesS3")
    private Boolean EnableCustomBrandingUsesS3;
    @SerializedName("EnablePromotions")
    private Boolean EnablePromotions;
    @SerializedName("CanCreateMultiTenantZones")
    private Boolean CanCreateMultiTenantZones;
    @SerializedName("EnableDLP")
    private Boolean EnableDLP;
    @SerializedName("EnableIRM")
    private Boolean EnableIRM;
    @SerializedName("EnableECMConnectors")
    private Boolean EnableECMConnectors;
    @SerializedName("EnableOfficeOnlinePreviews")
    private Boolean EnableOfficeOnlinePreviews;
    @SerializedName("EnableOfficeOnlineEditing")
    private Boolean EnableOfficeOnlineEditing;
    @SerializedName("EnableGoogleDriveEditing")
    private Boolean EnableGoogleDriveEditing;
    @SerializedName("RecycleBinDays")
    private Integer RecycleBinDays;
    @SerializedName("SyncConcurrentTransferThreadsLimit")
    private Integer SyncConcurrentTransferThreadsLimit;
    @SerializedName("HasPHI")
    private Boolean HasPHI;
    @SerializedName("EnableCitrixManagedStorageZones")
    private Boolean EnableCitrixManagedStorageZones;
    @SerializedName("PrimaryStorageBasePath")
    private String PrimaryStorageBasePath;
    @SerializedName("EnableSharingConnectorItems")
    private Boolean EnableSharingConnectorItems;
    @SerializedName("AccountMessageCode")
    private SFAccountMessageCode AccountMessageCode;
    @SerializedName("EnableSingleIdentity")
    private Boolean EnableSingleIdentity;
    @SerializedName("EnableDriveMapping")
    private Boolean EnableDriveMapping;
    @SerializedName("NotificationLocale")
    private SFSafeEnum<SFNotificationLocale> NotificationLocale;
    @SerializedName("RetentionPolicySysAdminOnly")
    private Boolean RetentionPolicySysAdminOnly;
    @SerializedName("EnableDocumentApprovalWorkflow")
    private Boolean EnableDocumentApprovalWorkflow;
    @SerializedName("EnableLocalization")
    private Boolean EnableLocalization;
    @SerializedName("EnableSecondaryDbContacts")
    private Boolean EnableSecondaryDbContacts;
    @SerializedName("EnableCADPreview")
    private Boolean EnableCADPreview;
    @SerializedName("IsQuotaLimitAvailable")
    private Boolean IsQuotaLimitAvailable;
    @SerializedName("EnableQuotaLimit")
    private Boolean EnableQuotaLimit;
    @SerializedName("QuotaLimitInGB")
    private Integer QuotaLimitInGB;
    @SerializedName("EnableRenderLibXThumbnails")
    private Boolean EnableRenderLibXThumbnails;
    @SerializedName("EnableRenderAPIThumbnails")
    private Boolean EnableRenderAPIThumbnails;
    @SerializedName("EnablePolicyBasedAdministration")
    private Boolean EnablePolicyBasedAdministration;
    @SerializedName("EnableViewerComponentX")
    private Boolean EnableViewerComponentX;
    @SerializedName("EnableRequestList")
    private Boolean EnableRequestList;
    @SerializedName("CanStoreItemsWithMetadata")
    private Boolean CanStoreItemsWithMetadata;
    @SerializedName("EnableRemoteWipe")
    private Boolean EnableRemoteWipe;
    @SerializedName("EnableSharedGroupRole")
    private Boolean EnableSharedGroupRole;
    @SerializedName("EnableFolderPay")
    private Boolean EnableFolderPay;
    @SerializedName("EnableImage32")
    private Boolean EnableImage32;
    @SerializedName("EnableContentViewer")
    private Boolean EnableContentViewer;
    @SerializedName("EnableShareConnectConnector")
    private Boolean EnableShareConnectConnector;
    @SerializedName("DisableSecondaryEmails")
    private Boolean DisableSecondaryEmails;
    @SerializedName("ForceSSO")
    private Boolean ForceSSO;
    @SerializedName("LoginPageType")
    private SFSafeEnum<SFLoginPageType> LoginPageType;
    @SerializedName("HideBillingInfoExceptions")
    private String HideBillingInfoExceptions;
    @SerializedName("ShowBillingInfo")
    private Boolean ShowBillingInfo;
    @SerializedName("SuperGroupId")
    private String SuperGroupId;
    @SerializedName("HideSuperGroup")
    private Boolean HideSuperGroup;
    @SerializedName("EnablePowerTools")
    private Boolean EnablePowerTools;
    @SerializedName("EnableMobileFormsWorkflow")
    private Boolean EnableMobileFormsWorkflow;
    @SerializedName("IsArchiveAccount")
    private Boolean IsArchiveAccount;
    @SerializedName("EnableDesktopAppExplorerIntegration")
    private Boolean EnableDesktopAppExplorerIntegration;
    @SerializedName("EnableSmartFolders")
    private Boolean EnableSmartFolders;
    @SerializedName("EnableRemovePHIfromDICOMs")
    private Boolean EnableRemovePHIfromDICOMs;

    public Boolean getEnableViewOnly() {
        return this.EnableViewOnly;
    }

    public void setEnableViewOnly(Boolean enableviewonly) {
        this.EnableViewOnly = enableviewonly;
    }

    public Boolean getEnableWatermarkOnViewOnly() {
        return this.EnableWatermarkOnViewOnly;
    }

    public void setEnableWatermarkOnViewOnly(Boolean enablewatermarkonviewonly) {
        this.EnableWatermarkOnViewOnly = enablewatermarkonviewonly;
    }

    public Boolean getAllowProactiveNotifications() {
        return this.AllowProactiveNotifications;
    }

    public void setAllowProactiveNotifications(Boolean allowproactivenotifications) {
        this.AllowProactiveNotifications = allowproactivenotifications;
    }

    public Boolean getShowUserListToClients() {
        return this.ShowUserListToClients;
    }

    public void setShowUserListToClients(Boolean showuserlisttoclients) {
        this.ShowUserListToClients = showuserlisttoclients;
    }

    /**
     * Enforce RequireLogin requirement for all Send Shares
     */
    public Boolean getRequireLoginOnDownload() {
        return this.RequireLoginOnDownload;
    }

    /**
     * Enforce RequireLogin requirement for all Send Shares
     */
    public void setRequireLoginOnDownload(Boolean requireloginondownload) {
        this.RequireLoginOnDownload = requireloginondownload;
    }

    /**
     * Enforce RequireLogin requirement for all Request Shares
     */
    public Boolean getRequireLoginOnUpload() {
        return this.RequireLoginOnUpload;
    }

    /**
     * Enforce RequireLogin requirement for all Request Shares
     */
    public void setRequireLoginOnUpload(Boolean requireloginonupload) {
        this.RequireLoginOnUpload = requireloginonupload;
    }

    public Boolean getRequireLoginByDefault() {
        return this.RequireLoginByDefault;
    }

    public void setRequireLoginByDefault(Boolean requireloginbydefault) {
        this.RequireLoginByDefault = requireloginbydefault;
    }

    public Boolean getEnableClientSend() {
        return this.EnableClientSend;
    }

    public void setEnableClientSend(Boolean enableclientsend) {
        this.EnableClientSend = enableclientsend;
    }

    public Boolean getEnableThumbnails() {
        return this.EnableThumbnails;
    }

    public void setEnableThumbnails(Boolean enablethumbnails) {
        this.EnableThumbnails = enablethumbnails;
    }

    public Boolean getEnableSSO() {
        return this.EnableSSO;
    }

    public void setEnableSSO(Boolean enablesso) {
        this.EnableSSO = enablesso;
    }

    public Integer getVirusStrictness() {
        return this.VirusStrictness;
    }

    public void setVirusStrictness(Integer virusstrictness) {
        this.VirusStrictness = virusstrictness;
    }

    public Boolean getEnableSfAdi() {
        return this.EnableSfAdi;
    }

    public void setEnableSfAdi(Boolean enablesfadi) {
        this.EnableSfAdi = enablesfadi;
    }

    public Boolean getEnableMultipleZones() {
        return this.EnableMultipleZones;
    }

    public void setEnableMultipleZones(Boolean enablemultiplezones) {
        this.EnableMultipleZones = enablemultiplezones;
    }

    public SFZone getDefaultZone() {
        return this.DefaultZone;
    }

    public void setDefaultZone(SFZone defaultzone) {
        this.DefaultZone = defaultzone;
    }

    public Boolean getEnableVersioning() {
        return this.EnableVersioning;
    }

    public void setEnableVersioning(Boolean enableversioning) {
        this.EnableVersioning = enableversioning;
    }

    public String getSystemType() {
        return this.SystemType;
    }

    public void setSystemType(String systemtype) {
        this.SystemType = systemtype;
    }

    public Boolean getEnableSync() {
        return this.EnableSync;
    }

    public void setEnableSync(Boolean enablesync) {
        this.EnableSync = enablesync;
    }

    public Boolean getEnableSyncAutoUpdate() {
        return this.EnableSyncAutoUpdate;
    }

    public void setEnableSyncAutoUpdate(Boolean enablesyncautoupdate) {
        this.EnableSyncAutoUpdate = enablesyncautoupdate;
    }

    public String getSystemName() {
        return this.SystemName;
    }

    public void setSystemName(String systemname) {
        this.SystemName = systemname;
    }

    public String getHomeScreenName() {
        return this.HomeScreenName;
    }

    public void setHomeScreenName(String homescreenname) {
        this.HomeScreenName = homescreenname;
    }

    public Boolean getShowTermsCheckbox() {
        return this.ShowTermsCheckbox;
    }

    public void setShowTermsCheckbox(Boolean showtermscheckbox) {
        this.ShowTermsCheckbox = showtermscheckbox;
    }

    public String getTermsCheckboxText() {
        return this.TermsCheckboxText;
    }

    public void setTermsCheckboxText(String termscheckboxtext) {
        this.TermsCheckboxText = termscheckboxtext;
    }

    public Integer getTermsCheckboxStrictness() {
        return this.TermsCheckboxStrictness;
    }

    public void setTermsCheckboxStrictness(Integer termscheckboxstrictness) {
        this.TermsCheckboxStrictness = termscheckboxstrictness;
    }

    public Boolean getRequireCompanyNameWithUserInfo() {
        return this.RequireCompanyNameWithUserInfo;
    }

    public void setRequireCompanyNameWithUserInfo(Boolean requirecompanynamewithuserinfo) {
        this.RequireCompanyNameWithUserInfo = requirecompanynamewithuserinfo;
    }

    public Boolean getEnableEditor() {
        return this.EnableEditor;
    }

    public void setEnableEditor(Boolean enableeditor) {
        this.EnableEditor = enableeditor;
    }

    public Integer getShareIDMaxExpirationDays() {
        return this.ShareIDMaxExpirationDays;
    }

    public void setShareIDMaxExpirationDays(Integer shareidmaxexpirationdays) {
        this.ShareIDMaxExpirationDays = shareidmaxexpirationdays;
    }

    public Boolean getAdminIsSuperUser() {
        return this.AdminIsSuperUser;
    }

    public void setAdminIsSuperUser(Boolean adminissuperuser) {
        this.AdminIsSuperUser = adminissuperuser;
    }

    public Boolean getShowFolderAccessList() {
        return this.ShowFolderAccessList;
    }

    public void setShowFolderAccessList(Boolean showfolderaccesslist) {
        this.ShowFolderAccessList = showfolderaccesslist;
    }

    public Boolean getFromEmailIsShareFile() {
        return this.FromEmailIsShareFile;
    }

    public void setFromEmailIsShareFile(Boolean fromemailissharefile) {
        this.FromEmailIsShareFile = fromemailissharefile;
    }

    public Boolean getUseAlternateSMTP() {
        return this.UseAlternateSMTP;
    }

    public void setUseAlternateSMTP(Boolean usealternatesmtp) {
        this.UseAlternateSMTP = usealternatesmtp;
    }

    public Boolean getShowPasswordInEmail() {
        return this.ShowPasswordInEmail;
    }

    public void setShowPasswordInEmail(Boolean showpasswordinemail) {
        this.ShowPasswordInEmail = showpasswordinemail;
    }

    public String getEmailPasswordText() {
        return this.EmailPasswordText;
    }

    public void setEmailPasswordText(String emailpasswordtext) {
        this.EmailPasswordText = emailpasswordtext;
    }

    public Boolean getEnableSelfNotificationsUpload() {
        return this.EnableSelfNotificationsUpload;
    }

    public void setEnableSelfNotificationsUpload(Boolean enableselfnotificationsupload) {
        this.EnableSelfNotificationsUpload = enableselfnotificationsupload;
    }

    public Boolean getEnableSelfNotificationsDownload() {
        return this.EnableSelfNotificationsDownload;
    }

    public void setEnableSelfNotificationsDownload(Boolean enableselfnotificationsdownload) {
        this.EnableSelfNotificationsDownload = enableselfnotificationsdownload;
    }

    public Boolean getEnableUploadShareIDReceipt() {
        return this.EnableUploadShareIDReceipt;
    }

    public void setEnableUploadShareIDReceipt(Boolean enableuploadshareidreceipt) {
        this.EnableUploadShareIDReceipt = enableuploadshareidreceipt;
    }

    public Integer getDefaultConsolidatedNotificationInterval() {
        return this.DefaultConsolidatedNotificationInterval;
    }

    public void setDefaultConsolidatedNotificationInterval(Integer defaultconsolidatednotificationinterval) {
        this.DefaultConsolidatedNotificationInterval = defaultconsolidatednotificationinterval;
    }

    public Integer getExpirationDays() {
        return this.ExpirationDays;
    }

    public void setExpirationDays(Integer expirationdays) {
        this.ExpirationDays = expirationdays;
    }

    /**
     * Valid Values: string.Empty, Name, CreatorNameShort, FileSize, CreationDate
     */
    public String getDefaultSortField() {
        return this.DefaultSortField;
    }

    /**
     * Valid Values: string.Empty, Name, CreatorNameShort, FileSize, CreationDate
     */
    public void setDefaultSortField(String defaultsortfield) {
        this.DefaultSortField = defaultsortfield;
    }

    /**
     * Valid Values: string.Empty, asc, desc
     */
    public String getDefaultSortOrder() {
        return this.DefaultSortOrder;
    }

    /**
     * Valid Values: string.Empty, asc, desc
     */
    public void setDefaultSortOrder(String defaultsortorder) {
        this.DefaultSortOrder = defaultsortorder;
    }

    public Boolean getDefaultIsVersioned() {
        return this.DefaultIsVersioned;
    }

    public void setDefaultIsVersioned(Boolean defaultisversioned) {
        this.DefaultIsVersioned = defaultisversioned;
    }

    public Integer getDefaultMaxVersions() {
        return this.DefaultMaxVersions;
    }

    public void setDefaultMaxVersions(Integer defaultmaxversions) {
        this.DefaultMaxVersions = defaultmaxversions;
    }

    public String getViewOnlyWatermarkText() {
        return this.ViewOnlyWatermarkText;
    }

    public void setViewOnlyWatermarkText(String viewonlywatermarktext) {
        this.ViewOnlyWatermarkText = viewonlywatermarktext;
    }

    public Boolean getEnableDocViewerPrinting() {
        return this.EnableDocViewerPrinting;
    }

    public void setEnableDocViewerPrinting(Boolean enabledocviewerprinting) {
        this.EnableDocViewerPrinting = enabledocviewerprinting;
    }

    public Boolean getEnableWatermarkedDownloads() {
        return this.EnableWatermarkedDownloads;
    }

    public void setEnableWatermarkedDownloads(Boolean enablewatermarkeddownloads) {
        this.EnableWatermarkedDownloads = enablewatermarkeddownloads;
    }

    public Boolean getEnableTwoFactorAuth() {
        return this.EnableTwoFactorAuth;
    }

    public void setEnableTwoFactorAuth(Boolean enabletwofactorauth) {
        this.EnableTwoFactorAuth = enabletwofactorauth;
    }

    public Integer getLoginFailMaxAttempts() {
        return this.LoginFailMaxAttempts;
    }

    public void setLoginFailMaxAttempts(Integer loginfailmaxattempts) {
        this.LoginFailMaxAttempts = loginfailmaxattempts;
    }

    public Integer getLoginFailLockoutSecs() {
        return this.LoginFailLockoutSecs;
    }

    public void setLoginFailLockoutSecs(Integer loginfaillockoutsecs) {
        this.LoginFailLockoutSecs = loginfaillockoutsecs;
    }

    public String getIPRestrictions() {
        return this.IPRestrictions;
    }

    public void setIPRestrictions(String iprestrictions) {
        this.IPRestrictions = iprestrictions;
    }

    public Integer getInactiveTimeoutMins() {
        return this.InactiveTimeoutMins;
    }

    public void setInactiveTimeoutMins(Integer inactivetimeoutmins) {
        this.InactiveTimeoutMins = inactivetimeoutmins;
    }

    public Integer getOAuth2RefreshTokenLifetimeMinutes() {
        return this.OAuth2RefreshTokenLifetimeMinutes;
    }

    public void setOAuth2RefreshTokenLifetimeMinutes(Integer oauth2refreshtokenlifetimeminutes) {
        this.OAuth2RefreshTokenLifetimeMinutes = oauth2refreshtokenlifetimeminutes;
    }

    public String getPasswordRegEx() {
        return this.PasswordRegEx;
    }

    public void setPasswordRegEx(String passwordregex) {
        this.PasswordRegEx = passwordregex;
    }

    public String getPasswordRegExFormula() {
        return this.PasswordRegExFormula;
    }

    public void setPasswordRegExFormula(String passwordregexformula) {
        this.PasswordRegExFormula = passwordregexformula;
    }

    public String getPasswordRegExDescription() {
        return this.PasswordRegExDescription;
    }

    public void setPasswordRegExDescription(String passwordregexdescription) {
        this.PasswordRegExDescription = passwordregexdescription;
    }

    public Boolean getEnableActivationLinks() {
        return this.EnableActivationLinks;
    }

    public void setEnableActivationLinks(Boolean enableactivationlinks) {
        this.EnableActivationLinks = enableactivationlinks;
    }

    public Boolean getIsFINRA() {
        return this.IsFINRA;
    }

    public void setIsFINRA(Boolean isfinra) {
        this.IsFINRA = isfinra;
    }

    public Boolean getEnableOAuth() {
        return this.EnableOAuth;
    }

    public void setEnableOAuth(Boolean enableoauth) {
        this.EnableOAuth = enableoauth;
    }

    public Boolean getEnableQandA() {
        return this.EnableQandA;
    }

    public void setEnableQandA(Boolean enableqanda) {
        this.EnableQandA = enableqanda;
    }

    public Boolean getEnableQandATextInNotifications() {
        return this.EnableQandATextInNotifications;
    }

    public void setEnableQandATextInNotifications(Boolean enableqandatextinnotifications) {
        this.EnableQandATextInNotifications = enableqandatextinnotifications;
    }

    public SFSafeEnum<SFUXMode> getUXMode() {
        return this.UXMode;
    }

    public void setUXMode(SFSafeEnum<SFUXMode> uxmode) {
        this.UXMode = uxmode;
    }

    public Integer getIndustryCode() {
        return this.IndustryCode;
    }

    public void setIndustryCode(Integer industrycode) {
        this.IndustryCode = industrycode;
    }

    public Integer getPasswordMaxAgeDays() {
        return this.PasswordMaxAgeDays;
    }

    public void setPasswordMaxAgeDays(Integer passwordmaxagedays) {
        this.PasswordMaxAgeDays = passwordmaxagedays;
    }

    public Integer getPasswordHistoryCount() {
        return this.PasswordHistoryCount;
    }

    public void setPasswordHistoryCount(Integer passwordhistorycount) {
        this.PasswordHistoryCount = passwordhistorycount;
    }

    public Integer getMinimumLength() {
        return this.MinimumLength;
    }

    public void setMinimumLength(Integer minimumlength) {
        this.MinimumLength = minimumlength;
    }

    public Integer getMinimumSpecialCharacters() {
        return this.MinimumSpecialCharacters;
    }

    public void setMinimumSpecialCharacters(Integer minimumspecialcharacters) {
        this.MinimumSpecialCharacters = minimumspecialcharacters;
    }

    public Integer getMinimumNumeric() {
        return this.MinimumNumeric;
    }

    public void setMinimumNumeric(Integer minimumnumeric) {
        this.MinimumNumeric = minimumnumeric;
    }

    public String getAllowedSpecialCharacters() {
        return this.AllowedSpecialCharacters;
    }

    public void setAllowedSpecialCharacters(String allowedspecialcharacters) {
        this.AllowedSpecialCharacters = allowedspecialcharacters;
    }

    /**
     * The password policy for the Account, specifying password strength, age, and reuse policies.
     */
    public SFPasswordPolicy getPasswordPolicy() {
        return this.PasswordPolicy;
    }

    /**
     * The password policy for the Account, specifying password strength, age, and reuse policies.
     */
    public void setPasswordPolicy(SFPasswordPolicy passwordpolicy) {
        this.PasswordPolicy = passwordpolicy;
    }

    public Boolean getEnableWebDAV() {
        return this.EnableWebDAV;
    }

    public void setEnableWebDAV(Boolean enablewebdav) {
        this.EnableWebDAV = enablewebdav;
    }

    /**
     * ShareFile allows users on certain plans to connect with your ShareFile account through WebDAV to various clients.
     * ShareFile WebDAV is not available for Enterprise accounts. This tool is not compatible with on-premise storage and cannot be used with company credentials.
     * This property describes WebDAV server information. It cannot be modified.
     */
    public String getWebDAVServerName() {
        return this.WebDAVServerName;
    }

    /**
     * ShareFile allows users on certain plans to connect with your ShareFile account through WebDAV to various clients.
     * ShareFile WebDAV is not available for Enterprise accounts. This tool is not compatible with on-premise storage and cannot be used with company credentials.
     * This property describes WebDAV server information. It cannot be modified.
     */
    public void setWebDAVServerName(String webdavservername) {
        this.WebDAVServerName = webdavservername;
    }

    public Boolean getEnableFTP() {
        return this.EnableFTP;
    }

    public void setEnableFTP(Boolean enableftp) {
        this.EnableFTP = enableftp;
    }

    public Boolean getEnableSFTP() {
        return this.EnableSFTP;
    }

    public void setEnableSFTP(Boolean enablesftp) {
        this.EnableSFTP = enablesftp;
    }

    /**
     * ShareFile is compatible with most well-known FTP clients, enabling you to connect to your ShareFile account directly from an FTP program.
     * This property describes FTP server information. It cannot be modified.
     */
    public String getFtpServerName() {
        return this.FtpServerName;
    }

    /**
     * ShareFile is compatible with most well-known FTP clients, enabling you to connect to your ShareFile account directly from an FTP program.
     * This property describes FTP server information. It cannot be modified.
     */
    public void setFtpServerName(String ftpservername) {
        this.FtpServerName = ftpservername;
    }

    public Boolean getDisableMarketing() {
        return this.DisableMarketing;
    }

    public void setDisableMarketing(Boolean disablemarketing) {
        this.DisableMarketing = disablemarketing;
    }

    public String getVDRDocViewerURL() {
        return this.VDRDocViewerURL;
    }

    public void setVDRDocViewerURL(String vdrdocviewerurl) {
        this.VDRDocViewerURL = vdrdocviewerurl;
    }

    public Boolean getEnableSMBConnectorForAccount() {
        return this.EnableSMBConnectorForAccount;
    }

    public void setEnableSMBConnectorForAccount(Boolean enablesmbconnectorforaccount) {
        this.EnableSMBConnectorForAccount = enablesmbconnectorforaccount;
    }

    public Boolean getEnablePersonalCloudConnectors() {
        return this.EnablePersonalCloudConnectors;
    }

    public void setEnablePersonalCloudConnectors(Boolean enablepersonalcloudconnectors) {
        this.EnablePersonalCloudConnectors = enablepersonalcloudconnectors;
    }

    public String getAccountID() {
        return this.AccountID;
    }

    public void setAccountID(String accountid) {
        this.AccountID = accountid;
    }

    public Boolean getEnableStorageZoneConnector() {
        return this.EnableStorageZoneConnector;
    }

    public void setEnableStorageZoneConnector(Boolean enablestoragezoneconnector) {
        this.EnableStorageZoneConnector = enablestoragezoneconnector;
    }

    public Boolean getHasAnyConnectorZones() {
        return this.HasAnyConnectorZones;
    }

    public void setHasAnyConnectorZones(Boolean hasanyconnectorzones) {
        this.HasAnyConnectorZones = hasanyconnectorzones;
    }

    public Boolean getEnableENSForAccount() {
        return this.EnableENSForAccount;
    }

    public void setEnableENSForAccount(Boolean enableensforaccount) {
        this.EnableENSForAccount = enableensforaccount;
    }

    public String getENSRecommendedPollingSyncInterval() {
        return this.ENSRecommendedPollingSyncInterval;
    }

    public void setENSRecommendedPollingSyncInterval(String ensrecommendedpollingsyncinterval) {
        this.ENSRecommendedPollingSyncInterval = ensrecommendedpollingsyncinterval;
    }

    public String getENSRecommendedNotificationSyncInterval() {
        return this.ENSRecommendedNotificationSyncInterval;
    }

    public void setENSRecommendedNotificationSyncInterval(String ensrecommendednotificationsyncinterval) {
        this.ENSRecommendedNotificationSyncInterval = ensrecommendednotificationsyncinterval;
    }

    public Integer getENSNotificationConfigurationCount() {
        return this.ENSNotificationConfigurationCount;
    }

    public void setENSNotificationConfigurationCount(Integer ensnotificationconfigurationcount) {
        this.ENSNotificationConfigurationCount = ensnotificationconfigurationcount;
    }

    public Integer getENSFailSafePollingCount() {
        return this.ENSFailSafePollingCount;
    }

    public void setENSFailSafePollingCount(Integer ensfailsafepollingcount) {
        this.ENSFailSafePollingCount = ensfailsafepollingcount;
    }

    public Integer getENSMaxNotificationSyncWaitCount() {
        return this.ENSMaxNotificationSyncWaitCount;
    }

    public void setENSMaxNotificationSyncWaitCount(Integer ensmaxnotificationsyncwaitcount) {
        this.ENSMaxNotificationSyncWaitCount = ensmaxnotificationsyncwaitcount;
    }

    public String getTrustedDomains() {
        return this.TrustedDomains;
    }

    public void setTrustedDomains(String trusteddomains) {
        this.TrustedDomains = trusteddomains;
    }

    public Boolean getUseWebPopAsWebAppLogin() {
        return this.UseWebPopAsWebAppLogin;
    }

    public void setUseWebPopAsWebAppLogin(Boolean usewebpopaswebapplogin) {
        this.UseWebPopAsWebAppLogin = usewebpopaswebapplogin;
    }

    public Boolean getEnableReportingV3() {
        return this.EnableReportingV3;
    }

    public void setEnableReportingV3(Boolean enablereportingv3) {
        this.EnableReportingV3 = enablereportingv3;
    }

    public Boolean getEnableEncryptedEmailForOutlookPlugin() {
        return this.EnableEncryptedEmailForOutlookPlugin;
    }

    public void setEnableEncryptedEmailForOutlookPlugin(Boolean enableencryptedemailforoutlookplugin) {
        this.EnableEncryptedEmailForOutlookPlugin = enableencryptedemailforoutlookplugin;
    }

    public Boolean getEnableDocPreviews() {
        return this.EnableDocPreviews;
    }

    public void setEnableDocPreviews(Boolean enabledocpreviews) {
        this.EnableDocPreviews = enabledocpreviews;
    }

    public Boolean getDisablePasswordAutocompleteInWebApp() {
        return this.DisablePasswordAutocompleteInWebApp;
    }

    public void setDisablePasswordAutocompleteInWebApp(Boolean disablepasswordautocompleteinwebapp) {
        this.DisablePasswordAutocompleteInWebApp = disablepasswordautocompleteinwebapp;
    }

    public Boolean getEnableDesktopEditorForAccount() {
        return this.EnableDesktopEditorForAccount;
    }

    public void setEnableDesktopEditorForAccount(Boolean enabledesktopeditorforaccount) {
        this.EnableDesktopEditorForAccount = enabledesktopeditorforaccount;
    }

    public Boolean getUseStrictEmployeeDefinition() {
        return this.UseStrictEmployeeDefinition;
    }

    public void setUseStrictEmployeeDefinition(Boolean usestrictemployeedefinition) {
        this.UseStrictEmployeeDefinition = usestrictemployeedefinition;
    }

    public String getEmployeeEmailDomains() {
        return this.EmployeeEmailDomains;
    }

    public void setEmployeeEmailDomains(String employeeemaildomains) {
        this.EmployeeEmailDomains = employeeemaildomains;
    }

    public Boolean getIsPremier() {
        return this.IsPremier;
    }

    public void setIsPremier(Boolean ispremier) {
        this.IsPremier = ispremier;
    }

    public Boolean getDisableShareConnectForAccount() {
        return this.DisableShareConnectForAccount;
    }

    public void setDisableShareConnectForAccount(Boolean disableshareconnectforaccount) {
        this.DisableShareConnectForAccount = disableshareconnectforaccount;
    }

    public Boolean getDisablePrintToShareFile() {
        return this.DisablePrintToShareFile;
    }

    public void setDisablePrintToShareFile(Boolean disableprinttosharefile) {
        this.DisablePrintToShareFile = disableprinttosharefile;
    }

    public Boolean getEnableWebAppConnectorBrowsing() {
        return this.EnableWebAppConnectorBrowsing;
    }

    public void setEnableWebAppConnectorBrowsing(Boolean enablewebappconnectorbrowsing) {
        this.EnableWebAppConnectorBrowsing = enablewebappconnectorbrowsing;
    }

    public Boolean getEnableStrictCrossdomainPolicy() {
        return this.EnableStrictCrossdomainPolicy;
    }

    public void setEnableStrictCrossdomainPolicy(Boolean enablestrictcrossdomainpolicy) {
        this.EnableStrictCrossdomainPolicy = enablestrictcrossdomainpolicy;
    }

    public Boolean getDisableScanSnap() {
        return this.DisableScanSnap;
    }

    public void setDisableScanSnap(Boolean disablescansnap) {
        this.DisableScanSnap = disablescansnap;
    }

    public Boolean getEnableFileCount() {
        return this.EnableFileCount;
    }

    public void setEnableFileCount(Boolean enablefilecount) {
        this.EnableFileCount = enablefilecount;
    }

    public Boolean getEnableAntiVirus() {
        return this.EnableAntiVirus;
    }

    public void setEnableAntiVirus(Boolean enableantivirus) {
        this.EnableAntiVirus = enableantivirus;
    }

    public Boolean getEnableFileLocking() {
        return this.EnableFileLocking;
    }

    public void setEnableFileLocking(Boolean enablefilelocking) {
        this.EnableFileLocking = enablefilelocking;
    }

    public Boolean getDisableWebAppAccess() {
        return this.DisableWebAppAccess;
    }

    public void setDisableWebAppAccess(Boolean disablewebappaccess) {
        this.DisableWebAppAccess = disablewebappaccess;
    }

    public Boolean getEnableCWC() {
        return this.EnableCWC;
    }

    public void setEnableCWC(Boolean enablecwc) {
        this.EnableCWC = enablecwc;
    }

    public Boolean getEnableEnterpriseArchive() {
        return this.EnableEnterpriseArchive;
    }

    public void setEnableEnterpriseArchive(Boolean enableenterprisearchive) {
        this.EnableEnterpriseArchive = enableenterprisearchive;
    }

    public Date getEnterpriseArchiveActivationDate() {
        return this.EnterpriseArchiveActivationDate;
    }

    public void setEnterpriseArchiveActivationDate(Date enterprisearchiveactivationdate) {
        this.EnterpriseArchiveActivationDate = enterprisearchiveactivationdate;
    }

    public Boolean getEnableIntegrations() {
        return this.EnableIntegrations;
    }

    public void setEnableIntegrations(Boolean enableintegrations) {
        this.EnableIntegrations = enableintegrations;
    }

    public ArrayList<SFSafeEnum<SFIntegrationProvider>> getIntegrationProviders() {
        return this.IntegrationProviders;
    }

    public void setIntegrationProviders(ArrayList<SFSafeEnum<SFIntegrationProvider>> integrationproviders) {
        this.IntegrationProviders = integrationproviders;
    }

    public Boolean getEnableBouncedEmailNotifications() {
        return this.EnableBouncedEmailNotifications;
    }

    public void setEnableBouncedEmailNotifications(Boolean enablebouncedemailnotifications) {
        this.EnableBouncedEmailNotifications = enablebouncedemailnotifications;
    }

    public Boolean getShowDownloadLinkInUploadNotification() {
        return this.ShowDownloadLinkInUploadNotification;
    }

    public void setShowDownloadLinkInUploadNotification(Boolean showdownloadlinkinuploadnotification) {
        this.ShowDownloadLinkInUploadNotification = showdownloadlinkinuploadnotification;
    }

    public Boolean getAllowDownloadNotificationsWithoutAdmin() {
        return this.AllowDownloadNotificationsWithoutAdmin;
    }

    public void setAllowDownloadNotificationsWithoutAdmin(Boolean allowdownloadnotificationswithoutadmin) {
        this.AllowDownloadNotificationsWithoutAdmin = allowdownloadnotificationswithoutadmin;
    }

    public Boolean getEnableUserInvitations() {
        return this.EnableUserInvitations;
    }

    public void setEnableUserInvitations(Boolean enableuserinvitations) {
        this.EnableUserInvitations = enableuserinvitations;
    }

    public Boolean getEnableClickTrails() {
        return this.EnableClickTrails;
    }

    public void setEnableClickTrails(Boolean enableclicktrails) {
        this.EnableClickTrails = enableclicktrails;
    }

    public Boolean getEnableFolderTemplates() {
        return this.EnableFolderTemplates;
    }

    public void setEnableFolderTemplates(Boolean enablefoldertemplates) {
        this.EnableFolderTemplates = enablefoldertemplates;
    }

    public Boolean getEnableFileDrops() {
        return this.EnableFileDrops;
    }

    public void setEnableFileDrops(Boolean enablefiledrops) {
        this.EnableFileDrops = enablefiledrops;
    }

    public Integer getSpamEmailThreshold() {
        return this.SpamEmailThreshold;
    }

    public void setSpamEmailThreshold(Integer spamemailthreshold) {
        this.SpamEmailThreshold = spamemailthreshold;
    }

    public Boolean getEnableExternalEmailArchiving() {
        return this.EnableExternalEmailArchiving;
    }

    public void setEnableExternalEmailArchiving(Boolean enableexternalemailarchiving) {
        this.EnableExternalEmailArchiving = enableexternalemailarchiving;
    }

    public Boolean getCreatorCanDelete() {
        return this.CreatorCanDelete;
    }

    public void setCreatorCanDelete(Boolean creatorcandelete) {
        this.CreatorCanDelete = creatorcandelete;
    }

    /**
     * Whether the account can store items in the ShareFile control plane (as opposed to
     * Connectors). Driven by the EnableCloudStorage and EnablePrivateZones account preferences.
     */
    public Boolean getCanStoreItemsInShareFile() {
        return this.CanStoreItemsInShareFile;
    }

    /**
     * Whether the account can store items in the ShareFile control plane (as opposed to
     * Connectors). Driven by the EnableCloudStorage and EnablePrivateZones account preferences.
     */
    public void setCanStoreItemsInShareFile(Boolean canstoreitemsinsharefile) {
        this.CanStoreItemsInShareFile = canstoreitemsinsharefile;
    }

    public Boolean getEnableHomeFolders() {
        return this.EnableHomeFolders;
    }

    public void setEnableHomeFolders(Boolean enablehomefolders) {
        this.EnableHomeFolders = enablehomefolders;
    }

    public Boolean getEnableCustomBrandingUsesS3() {
        return this.EnableCustomBrandingUsesS3;
    }

    public void setEnableCustomBrandingUsesS3(Boolean enablecustombrandingusess3) {
        this.EnableCustomBrandingUsesS3 = enablecustombrandingusess3;
    }

    public Boolean getEnablePromotions() {
        return this.EnablePromotions;
    }

    public void setEnablePromotions(Boolean enablepromotions) {
        this.EnablePromotions = enablepromotions;
    }

    public Boolean getCanCreateMultiTenantZones() {
        return this.CanCreateMultiTenantZones;
    }

    public void setCanCreateMultiTenantZones(Boolean cancreatemultitenantzones) {
        this.CanCreateMultiTenantZones = cancreatemultitenantzones;
    }

    public Boolean getEnableDLP() {
        return this.EnableDLP;
    }

    public void setEnableDLP(Boolean enabledlp) {
        this.EnableDLP = enabledlp;
    }

    public Boolean getEnableIRM() {
        return this.EnableIRM;
    }

    public void setEnableIRM(Boolean enableirm) {
        this.EnableIRM = enableirm;
    }

    public Boolean getEnableECMConnectors() {
        return this.EnableECMConnectors;
    }

    public void setEnableECMConnectors(Boolean enableecmconnectors) {
        this.EnableECMConnectors = enableecmconnectors;
    }

    public Boolean getEnableOfficeOnlinePreviews() {
        return this.EnableOfficeOnlinePreviews;
    }

    public void setEnableOfficeOnlinePreviews(Boolean enableofficeonlinepreviews) {
        this.EnableOfficeOnlinePreviews = enableofficeonlinepreviews;
    }

    public Boolean getEnableOfficeOnlineEditing() {
        return this.EnableOfficeOnlineEditing;
    }

    public void setEnableOfficeOnlineEditing(Boolean enableofficeonlineediting) {
        this.EnableOfficeOnlineEditing = enableofficeonlineediting;
    }

    public Boolean getEnableGoogleDriveEditing() {
        return this.EnableGoogleDriveEditing;
    }

    public void setEnableGoogleDriveEditing(Boolean enablegoogledriveediting) {
        this.EnableGoogleDriveEditing = enablegoogledriveediting;
    }

    /**
     * Retention period of items in the recycle bin.
     */
    public Integer getRecycleBinDays() {
        return this.RecycleBinDays;
    }

    /**
     * Retention period of items in the recycle bin.
     */
    public void setRecycleBinDays(Integer recyclebindays) {
        this.RecycleBinDays = recyclebindays;
    }

    /**
     * Maximum number of concurrent uploads and downloads a Sync client should be creating, at any one time.
     */
    public Integer getSyncConcurrentTransferThreadsLimit() {
        return this.SyncConcurrentTransferThreadsLimit;
    }

    /**
     * Maximum number of concurrent uploads and downloads a Sync client should be creating, at any one time.
     */
    public void setSyncConcurrentTransferThreadsLimit(Integer syncconcurrenttransferthreadslimit) {
        this.SyncConcurrentTransferThreadsLimit = syncconcurrenttransferthreadslimit;
    }

    public Boolean getHasPHI() {
        return this.HasPHI;
    }

    public void setHasPHI(Boolean hasphi) {
        this.HasPHI = hasphi;
    }

    public Boolean getEnableCitrixManagedStorageZones() {
        return this.EnableCitrixManagedStorageZones;
    }

    public void setEnableCitrixManagedStorageZones(Boolean enablecitrixmanagedstoragezones) {
        this.EnableCitrixManagedStorageZones = enablecitrixmanagedstoragezones;
    }

    public String getPrimaryStorageBasePath() {
        return this.PrimaryStorageBasePath;
    }

    public void setPrimaryStorageBasePath(String primarystoragebasepath) {
        this.PrimaryStorageBasePath = primarystoragebasepath;
    }

    public Boolean getEnableSharingConnectorItems() {
        return this.EnableSharingConnectorItems;
    }

    public void setEnableSharingConnectorItems(Boolean enablesharingconnectoritems) {
        this.EnableSharingConnectorItems = enablesharingconnectoritems;
    }

    public SFAccountMessageCode getAccountMessageCode() {
        return this.AccountMessageCode;
    }

    public void setAccountMessageCode(SFAccountMessageCode accountmessagecode) {
        this.AccountMessageCode = accountmessagecode;
    }

    /**
     * Enable use of Single Identity authentication service for this account
     */
    public Boolean getEnableSingleIdentity() {
        return this.EnableSingleIdentity;
    }

    /**
     * Enable use of Single Identity authentication service for this account
     */
    public void setEnableSingleIdentity(Boolean enablesingleidentity) {
        this.EnableSingleIdentity = enablesingleidentity;
    }

    /**
     * Enable the use of the Drive Mapper utility for this account
     */
    public Boolean getEnableDriveMapping() {
        return this.EnableDriveMapping;
    }

    /**
     * Enable the use of the Drive Mapper utility for this account
     */
    public void setEnableDriveMapping(Boolean enabledrivemapping) {
        this.EnableDriveMapping = enabledrivemapping;
    }

    /**
     * Email notification locale. Values: Invariant, English, German, Spanish, French, Dutch, Chinese, Russian, Japanese, Korean, or Portuguese
     */
    public SFSafeEnum<SFNotificationLocale> getNotificationLocale() {
        return this.NotificationLocale;
    }

    /**
     * Email notification locale. Values: Invariant, English, German, Spanish, French, Dutch, Chinese, Russian, Japanese, Korean, or Portuguese
     */
    public void setNotificationLocale(SFSafeEnum<SFNotificationLocale> notificationlocale) {
        this.NotificationLocale = notificationlocale;
    }

    /**
     * If true, only Account Admins can update a folder's retention policy
     */
    public Boolean getRetentionPolicySysAdminOnly() {
        return this.RetentionPolicySysAdminOnly;
    }

    /**
     * If true, only Account Admins can update a folder's retention policy
     */
    public void setRetentionPolicySysAdminOnly(Boolean retentionpolicysysadminonly) {
        this.RetentionPolicySysAdminOnly = retentionpolicysysadminonly;
    }

    public Boolean getEnableDocumentApprovalWorkflow() {
        return this.EnableDocumentApprovalWorkflow;
    }

    public void setEnableDocumentApprovalWorkflow(Boolean enabledocumentapprovalworkflow) {
        this.EnableDocumentApprovalWorkflow = enabledocumentapprovalworkflow;
    }

    /**
     * Enable localization
     */
    public Boolean getEnableLocalization() {
        return this.EnableLocalization;
    }

    /**
     * Enable localization
     */
    public void setEnableLocalization(Boolean enablelocalization) {
        this.EnableLocalization = enablelocalization;
    }

    public Boolean getEnableSecondaryDbContacts() {
        return this.EnableSecondaryDbContacts;
    }

    public void setEnableSecondaryDbContacts(Boolean enablesecondarydbcontacts) {
        this.EnableSecondaryDbContacts = enablesecondarydbcontacts;
    }

    public Boolean getEnableCADPreview() {
        return this.EnableCADPreview;
    }

    public void setEnableCADPreview(Boolean enablecadpreview) {
        this.EnableCADPreview = enablecadpreview;
    }

    /**
     * Can Account enable/disable quota limit feature
     */
    public Boolean getIsQuotaLimitAvailable() {
        return this.IsQuotaLimitAvailable;
    }

    /**
     * Can Account enable/disable quota limit feature
     */
    public void setIsQuotaLimitAvailable(Boolean isquotalimitavailable) {
        this.IsQuotaLimitAvailable = isquotalimitavailable;
    }

    /**
     * Has the account enabled the quota limit
     */
    public Boolean getEnableQuotaLimit() {
        return this.EnableQuotaLimit;
    }

    /**
     * Has the account enabled the quota limit
     */
    public void setEnableQuotaLimit(Boolean enablequotalimit) {
        this.EnableQuotaLimit = enablequotalimit;
    }

    /**
     * Quota Limit in gigabytes
     */
    public Integer getQuotaLimitInGB() {
        return this.QuotaLimitInGB;
    }

    /**
     * Quota Limit in gigabytes
     */
    public void setQuotaLimitInGB(Integer quotalimitingb) {
        this.QuotaLimitInGB = quotalimitingb;
    }

    /**
     * Enables getting thumbnails from Renderer X service
     */
    public Boolean getEnableRenderLibXThumbnails() {
        return this.EnableRenderLibXThumbnails;
    }

    /**
     * Enables getting thumbnails from Renderer X service
     */
    public void setEnableRenderLibXThumbnails(Boolean enablerenderlibxthumbnails) {
        this.EnableRenderLibXThumbnails = enablerenderlibxthumbnails;
    }

    /**
     * Enables getting thumbnails from RenderAPI service
     */
    public Boolean getEnableRenderAPIThumbnails() {
        return this.EnableRenderAPIThumbnails;
    }

    /**
     * Enables getting thumbnails from RenderAPI service
     */
    public void setEnableRenderAPIThumbnails(Boolean enablerenderapithumbnails) {
        this.EnableRenderAPIThumbnails = enablerenderapithumbnails;
    }

    /**
     * Enables Policy based administration on account
     */
    public Boolean getEnablePolicyBasedAdministration() {
        return this.EnablePolicyBasedAdministration;
    }

    /**
     * Enables Policy based administration on account
     */
    public void setEnablePolicyBasedAdministration(Boolean enablepolicybasedadministration) {
        this.EnablePolicyBasedAdministration = enablepolicybasedadministration;
    }

    /**
     * Enables getting thumbnails from Renderer X service
     */
    public Boolean getEnableViewerComponentX() {
        return this.EnableViewerComponentX;
    }

    /**
     * Enables getting thumbnails from Renderer X service
     */
    public void setEnableViewerComponentX(Boolean enableviewercomponentx) {
        this.EnableViewerComponentX = enableviewercomponentx;
    }

    /**
     * Enables Provided By Client Request List feature
     */
    public Boolean getEnableRequestList() {
        return this.EnableRequestList;
    }

    /**
     * Enables Provided By Client Request List feature
     */
    public void setEnableRequestList(Boolean enablerequestlist) {
        this.EnableRequestList = enablerequestlist;
    }

    /**
     * Whether metadata of Item can be stored
     */
    public Boolean getCanStoreItemsWithMetadata() {
        return this.CanStoreItemsWithMetadata;
    }

    /**
     * Whether metadata of Item can be stored
     */
    public void setCanStoreItemsWithMetadata(Boolean canstoreitemswithmetadata) {
        this.CanStoreItemsWithMetadata = canstoreitemswithmetadata;
    }

    /**
     * Enable remote device wipe.
     */
    public Boolean getEnableRemoteWipe() {
        return this.EnableRemoteWipe;
    }

    /**
     * Enable remote device wipe.
     */
    public void setEnableRemoteWipe(Boolean enableremotewipe) {
        this.EnableRemoteWipe = enableremotewipe;
    }

    /**
     * Enable Shared Group Role
     */
    public Boolean getEnableSharedGroupRole() {
        return this.EnableSharedGroupRole;
    }

    /**
     * Enable Shared Group Role
     */
    public void setEnableSharedGroupRole(Boolean enablesharedgrouprole) {
        this.EnableSharedGroupRole = enablesharedgrouprole;
    }

    /**
     * Enable Folder Pay
     */
    public Boolean getEnableFolderPay() {
        return this.EnableFolderPay;
    }

    /**
     * Enable Folder Pay
     */
    public void setEnableFolderPay(Boolean enablefolderpay) {
        this.EnableFolderPay = enablefolderpay;
    }

    /**
     * Enable Image32
     */
    public Boolean getEnableImage32() {
        return this.EnableImage32;
    }

    /**
     * Enable Image32
     */
    public void setEnableImage32(Boolean enableimage32) {
        this.EnableImage32 = enableimage32;
    }

    /**
     * Enable Content Viewer integration
     */
    public Boolean getEnableContentViewer() {
        return this.EnableContentViewer;
    }

    /**
     * Enable Content Viewer integration
     */
    public void setEnableContentViewer(Boolean enablecontentviewer) {
        this.EnableContentViewer = enablecontentviewer;
    }

    /**
     * Enable ShareConnect Connector
     */
    public Boolean getEnableShareConnectConnector() {
        return this.EnableShareConnectConnector;
    }

    /**
     * Enable ShareConnect Connector
     */
    public void setEnableShareConnectConnector(Boolean enableshareconnectconnector) {
        this.EnableShareConnectConnector = enableshareconnectconnector;
    }

    public Boolean getDisableSecondaryEmails() {
        return this.DisableSecondaryEmails;
    }

    public void setDisableSecondaryEmails(Boolean disablesecondaryemails) {
        this.DisableSecondaryEmails = disablesecondaryemails;
    }

    public Boolean getForceSSO() {
        return this.ForceSSO;
    }

    public void setForceSSO(Boolean forcesso) {
        this.ForceSSO = forcesso;
    }

    public SFSafeEnum<SFLoginPageType> getLoginPageType() {
        return this.LoginPageType;
    }

    public void setLoginPageType(SFSafeEnum<SFLoginPageType> loginpagetype) {
        this.LoginPageType = loginpagetype;
    }

    public String getHideBillingInfoExceptions() {
        return this.HideBillingInfoExceptions;
    }

    public void setHideBillingInfoExceptions(String hidebillinginfoexceptions) {
        this.HideBillingInfoExceptions = hidebillinginfoexceptions;
    }

    public Boolean getShowBillingInfo() {
        return this.ShowBillingInfo;
    }

    public void setShowBillingInfo(Boolean showbillinginfo) {
        this.ShowBillingInfo = showbillinginfo;
    }

    /**
     * Id of the Super User Group
     */
    public String getSuperGroupId() {
        return this.SuperGroupId;
    }

    /**
     * Id of the Super User Group
     */
    public void setSuperGroupId(String supergroupid) {
        this.SuperGroupId = supergroupid;
    }

    /**
     * Hide Super User Group
     */
    public Boolean getHideSuperGroup() {
        return this.HideSuperGroup;
    }

    /**
     * Hide Super User Group
     */
    public void setHideSuperGroup(Boolean hidesupergroup) {
        this.HideSuperGroup = hidesupergroup;
    }

    /**
     * Enable Power Tools
     */
    public Boolean getEnablePowerTools() {
        return this.EnablePowerTools;
    }

    /**
     * Enable Power Tools
     */
    public void setEnablePowerTools(Boolean enablepowertools) {
        this.EnablePowerTools = enablepowertools;
    }

    /**
     * Enable Custom Workflows
     */
    public Boolean getEnableMobileFormsWorkflow() {
        return this.EnableMobileFormsWorkflow;
    }

    /**
     * Enable Custom Workflows
     */
    public void setEnableMobileFormsWorkflow(Boolean enablemobileformsworkflow) {
        this.EnableMobileFormsWorkflow = enablemobileformsworkflow;
    }

    public Boolean getIsArchiveAccount() {
        return this.IsArchiveAccount;
    }

    public void setIsArchiveAccount(Boolean isarchiveaccount) {
        this.IsArchiveAccount = isarchiveaccount;
    }

    /**
     * Enable Use of Desktop App + Explorer Integration (Drive Mapper)
     */
    public Boolean getEnableDesktopAppExplorerIntegration() {
        return this.EnableDesktopAppExplorerIntegration;
    }

    /**
     * Enable Use of Desktop App + Explorer Integration (Drive Mapper)
     */
    public void setEnableDesktopAppExplorerIntegration(Boolean enabledesktopappexplorerintegration) {
        this.EnableDesktopAppExplorerIntegration = enabledesktopappexplorerintegration;
    }

    /**
     * Enable creation of folders which will automatically categorize files
     */
    public Boolean getEnableSmartFolders() {
        return this.EnableSmartFolders;
    }

    /**
     * Enable creation of folders which will automatically categorize files
     */
    public void setEnableSmartFolders(Boolean enablesmartfolders) {
        this.EnableSmartFolders = enablesmartfolders;
    }

    /**
     * Enables De-Identification which removes PHI information from DICOM studies when uploaded
     */
    public Boolean getEnableRemovePHIfromDICOMs() {
        return this.EnableRemovePHIfromDICOMs;
    }

    /**
     * Enables De-Identification which removes PHI information from DICOM studies when uploaded
     */
    public void setEnableRemovePHIfromDICOMs(Boolean enableremovephifromdicoms) {
        this.EnableRemovePHIfromDICOMs = enableremovephifromdicoms;
    }

}