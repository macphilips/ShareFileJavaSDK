// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2017 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

package com.citrix.sharefile.api.models;

import com.google.gson.annotations.SerializedName;

public class SFIrmPrimaryAccessRightParams extends SFODataObject {

    @SerializedName("View")
    private Boolean View;
    @SerializedName("LightViewer")
    private Boolean LightViewer;
    @SerializedName("Print")
    private Boolean Print;
    @SerializedName("Edit")
    private Boolean Edit;
    @SerializedName("FullControl")
    private Boolean FullControl;
    @SerializedName("CopyData")
    private Boolean CopyData;
    @SerializedName("ScreenCapture")
    private Boolean ScreenCapture;
    @SerializedName("Macro")
    private Boolean Macro;
    @SerializedName("OfflineAccess")
    private Boolean OfflineAccess;

    /**
     * Allows user to view the documents
     */
    public Boolean getView() {
        return this.View;
    }

    /**
     * Allows user to view the documents
     */
    public void setView(Boolean view) {
        this.View = view;
    }

    /**
     * Allows user to use LightViewer client to view the documents
     */
    public Boolean getLightViewer() {
        return this.LightViewer;
    }

    /**
     * Allows user to use LightViewer client to view the documents
     */
    public void setLightViewer(Boolean lightviewer) {
        this.LightViewer = lightviewer;
    }

    /**
     * Allows user to print the documents
     */
    public Boolean getPrint() {
        return this.Print;
    }

    /**
     * Allows user to print the documents
     */
    public void setPrint(Boolean print) {
        this.Print = print;
    }

    /**
     * Allows user to edit the documents
     */
    public Boolean getEdit() {
        return this.Edit;
    }

    /**
     * Allows user to edit the documents
     */
    public void setEdit(Boolean edit) {
        this.Edit = edit;
    }

    /**
     * Allows user to have full control over the document.
     */
    public Boolean getFullControl() {
        return this.FullControl;
    }

    /**
     * Allows user to have full control over the document.
     */
    public void setFullControl(Boolean fullcontrol) {
        this.FullControl = fullcontrol;
    }

    /**
     * Allows user to copy the content into clipboard from the document.
     */
    public Boolean getCopyData() {
        return this.CopyData;
    }

    /**
     * Allows user to copy the content into clipboard from the document.
     */
    public void setCopyData(Boolean copydata) {
        this.CopyData = copydata;
    }

    /**
     * Allows user to use native screen capture tools.
     */
    public Boolean getScreenCapture() {
        return this.ScreenCapture;
    }

    /**
     * Allows user to use native screen capture tools.
     */
    public void setScreenCapture(Boolean screencapture) {
        this.ScreenCapture = screencapture;
    }

    /**
     * Allows user to run macros. User cannot even view a macro file if this access right is set to false.
     */
    public Boolean getMacro() {
        return this.Macro;
    }

    /**
     * Allows user to run macros. User cannot even view a macro file if this access right is set to false.
     */
    public void setMacro(Boolean macro) {
        this.Macro = macro;
    }

    /**
     * Allows user to access the documents offline
     */
    public Boolean getOfflineAccess() {
        return this.OfflineAccess;
    }

    /**
     * Allows user to access the documents offline
     */
    public void setOfflineAccess(Boolean offlineaccess) {
        this.OfflineAccess = offlineaccess;
    }

}